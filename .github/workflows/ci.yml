name: CI

on:
  push:
  pull_request:

jobs:
  verify-fred:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive

    # fred and scripts are subrepositories. They must be updated to match the release.
    - name: verify freenet.jar
      shell: bash
      run: |
        echo "install python"; sudo apt-get install python3
        pip install pyFreenet3
        ./run-node.sh
        echo -e "export fredDir=\"$(realpath .)/fred\"\nexport freenetExtPath=\"$HOME/Freenet/freenet-ext.jar\"\nexport fcpHost=127.0.0.1\nexport fcpPort=9481\n" > "$HOME"/.freenetrc
        cp "$HOME"/Freenet/freenet.jar ./wininstaller-innosetup/freenet.jar
        wget https://www.hyphanet.org/assets/keyring.gpg && gpg --import keyring.gpg
        cat ~/Freenet/wrapper.log
        echo "update JAVA_HOME environment variable"; source /etc/environment; source /etc/profile; export JAVA_HOME=/usr/lib/jvm/temurin-8-jdk-amd64
        echo "install sdkman"; curl -s "https://get.sdkman.io" | bash; source "/home/runner/.sdkman/bin/sdkman-init.sh"
        sdk install java 8.0.402-tem && cd ./scripts && ./verify-build --tag build01497 --online && cd -
        ./stop-node.sh

    - name: prepare the windows installer
      shell: bash
      run: |
        cd ./wininstaller-innosetup
        wget -O freenet.jar "https://github.com/freenet/fred/releases/download/build01497/freenet-build01497.jar"
        ./gradlew unzip updateSetupFile

    - name: build the windows installer
      shell: cmd
      run: |
        cd ./wininstaller-innosetup
        "%programfiles(x86)%\Inno Setup 6\iscc.exe" "FreenetInstall_InnoSetup.iss"
        
    - name: Upload the windows installer as an artifact
      uses: actions/upload-artifact@v2
      if: ${{ github.event_name != 'pull_request' }}
      with:
        path: "wininstaller-innosetup/Output/FreenetInstaller.exe"
        name: wininstaller-innosetup
